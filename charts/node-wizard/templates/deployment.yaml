apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: nodewizard
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: nodewizard
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nodewizard
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "ScheduleAnyway"
          labelSelector: 
            matchLabels:
              app.kubernetes.io/name: nodewizard
          matchLabelKeys:
            - pod-template-hash
          nodeAffinityPolicy: "Ignore"
          nodeTaintsPolicy: "Honor"
      serviceAccountName: {{ .Values.serviceAccountName  }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: nodewizard
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: LOG_LEVEL
          value: "{{ .Values.env.logLevel | default "info" }}"
        - name: IGNORE_ALL_DAEMONSETS
          value: "{{ .Values.env.ignoreAllDaemonsets | default "true" }}"
        - name: DELETE_EMPTY_DIR_DATA
          value: "{{ .Values.env.deleteEmptyDirData | default "true" }}"
        - name: FORCE_DELETE_PODS
          value: "{{ .Values.env.forceDeletePods | default "true" }}"
        - name: METRIC_PORT
          value: "{{ .Values.service.targetPort | default "8989" }}"
        ports:
          - containerPort: {{ .Values.service.targetPort | default "8989" }}
            name: metrics
            protocol: TCP
        resources:
        {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30